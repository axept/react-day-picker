{"version":3,"sources":["../src/Helpers.js"],"names":["cancelEvent","getCustomProps","getFirstDayOfMonth","getDaysInMonth","getModifiersForDay","getMonthsDiff","getWeekArray","startOfMonth","e","preventDefault","stopPropagation","props","propTypes","customProps","Object","keys","filter","hasOwnProperty","propName","forEach","d","Date","getFullYear","getMonth","resultDate","setMonth","setDate","getDate","modifierFunctions","reduce","modifiers","modifier","func","push","d1","d2","firstDayOfWeek","fixedWeeks","daysInMonth","dayArray","week","weekArray","i","day","length","getDay","indexOf","firstWeek","outsideDate","unshift","lastWeek","lastExtraWeek","lastDay","extraWeek","j","newDate","setHours"],"mappings":"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","file":"Helpers.js","sourcesContent":["\nimport { clone } from './DateUtils';\nimport { getFirstDayOfWeek } from './LocaleUtils';\n\nexport function cancelEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nexport function getCustomProps(props, propTypes) {\n  const customProps = {};\n  Object.keys(props)\n      .filter(propName => !propTypes.hasOwnProperty(propName))\n      .forEach(propName => {\n        customProps[propName] = props[propName];\n      });\n  return customProps;\n}\n\nexport function getFirstDayOfMonth(d) {\n  return new Date(d.getFullYear(), d.getMonth(), 1, 12);\n}\n\nexport function getDaysInMonth(d) {\n  const resultDate = getFirstDayOfMonth(d);\n\n  resultDate.setMonth(resultDate.getMonth() + 1);\n  resultDate.setDate(resultDate.getDate() - 1);\n\n  return resultDate.getDate();\n}\n\nexport function getModifiersForDay(d, modifierFunctions = {}) {\n  return Object.keys(modifierFunctions).reduce((modifiers, modifier) => {\n    const func = modifierFunctions[modifier];\n    if (func(d)) {\n      modifiers.push(modifier);\n    }\n    return modifiers;\n  }, []);\n}\n\nexport function getMonthsDiff(d1, d2) {\n  return d2.getMonth() - d1.getMonth() +\n    (12 * (d2.getFullYear() - d1.getFullYear()));\n}\n\nexport function getWeekArray(d, firstDayOfWeek = getFirstDayOfWeek(), fixedWeeks) {\n  const daysInMonth = getDaysInMonth(d);\n  const dayArray = [];\n\n  let week = [];\n  const weekArray = [];\n\n  for (let i = 1; i <= daysInMonth; i++) {\n    dayArray.push(new Date(d.getFullYear(), d.getMonth(), i, 12));\n  }\n\n  dayArray.forEach((day) => {\n    if (week.length > 0 && day.getDay() === firstDayOfWeek) {\n      weekArray.push(week);\n      week = [];\n    }\n    week.push(day);\n    if (dayArray.indexOf(day) === dayArray.length - 1) {\n      weekArray.push(week);\n    }\n  });\n\n  // unshift days to start the first week\n  const firstWeek = weekArray[0];\n  for (let i = 7 - firstWeek.length; i > 0; i--) {\n    const outsideDate = clone(firstWeek[0]);\n    outsideDate.setDate(firstWeek[0].getDate() - 1);\n    firstWeek.unshift(outsideDate);\n  }\n\n  // push days until the end of the last week\n  const lastWeek = weekArray[weekArray.length - 1];\n  for (let i = lastWeek.length; i < 7; i++) {\n    const outsideDate = clone(lastWeek[lastWeek.length - 1]);\n    outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);\n    lastWeek.push(outsideDate);\n  }\n\n  // add extra weeks to reach 6 weeks\n  if (fixedWeeks && weekArray.length < 6) {\n    let lastExtraWeek;\n\n    for (let i = weekArray.length; i < 6; i++) {\n      lastExtraWeek = weekArray[weekArray.length - 1];\n      const lastDay = lastExtraWeek[lastExtraWeek.length - 1];\n      const extraWeek = [];\n\n      for (let j = 0; j < 7; j++) {\n        const outsideDate = clone(lastDay);\n        outsideDate.setDate(lastDay.getDate() + j + 1);\n        extraWeek.push(outsideDate);\n      }\n\n      weekArray.push(extraWeek);\n    }\n  }\n\n  return weekArray;\n}\n\nexport function startOfMonth(d) {\n  const newDate = clone(d);\n  newDate.setDate(1);\n  newDate.setHours(12, 0, 0, 0); // always set noon to avoid time zone issues\n  return newDate;\n}\n"]}